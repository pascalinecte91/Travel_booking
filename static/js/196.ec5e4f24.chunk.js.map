{"version":3,"file":"static/js/196.ec5e4f24.chunk.js","mappings":"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","sources":["components/caroussel/Caroussel.js","components/destination/DestinationCard.js","pages/home/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\n\r\nconst Caroussel = ({ images }) => {\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n    const [enlargedImageIndex, setEnlargedImageIndex] = useState(null);\r\n\r\n    const nextSlide = () => {\r\n      const index = (currentImageIndex + 1) % images.length;\r\n      setCurrentImageIndex(index);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      const index = (currentImageIndex - 1 + images.length) % images.length;\r\n      setCurrentImageIndex(index);\r\n    };\r\n\r\n    const openImage = (index) => {\r\n      setEnlargedImageIndex((currentImageIndex + index) % images.length);\r\n    };\r\n\r\n    const closeImage = () => {\r\n      setEnlargedImageIndex(null);\r\n    };\r\n\r\n    return (\r\n      <section className='caroussel'>\r\n        <button className='caroussel__prev' onClick={prevSlide}><FaArrowLeft /></button>\r\n  \r\n        <div className='caroussel__images'>\r\n          {images.map((image, index) => (\r\n            <img key={index} src={image} alt=\"\" onClick={() => openImage(index)} className={`carousel-image ${index === currentImageIndex ? 'active' : ''}`} />\r\n          ))}\r\n        </div>\r\n  \r\n        <button className='caroussel__next' onClick={nextSlide}><FaArrowRight /></button>\r\n  \r\n        {enlargedImageIndex !== null && (\r\n          <div className='caroussel__enlarged' onClick={closeImage}>\r\n            <img src={images[enlargedImageIndex]} alt=\"\" className=\"enlarged-image\" />\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n};\r\n\r\nexport default Caroussel;\r\n","import React from 'react';\r\nimport Chance from 'chance';\r\n\r\nconst chance = new Chance();\r\n\r\nconst DestinationCard = ({ destination }) => {\r\n    // Génération d'une phrase aléatoire avec  mots\r\n    const randomPhrase = chance.sentence({ words: 10 });\r\n    \r\n    return (\r\n        <div className=\"destination-card-container\">\r\n            <h3>{destination.title}</h3>\r\n            <div className=\"destination-card\">\r\n                <img src={destination.image} alt={destination.title} />\r\n               \r\n                <p>{destination.description}</p>\r\n            </div>\r\n            {/* Propriété \"designation\" à droite de la carte avec le contenu aléatoire */}\r\n            <div className=\"designation\">\r\n                <p>{randomPhrase}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DestinationCard;\r\n","import React from \"react\";\r\nimport Chance from \"chance\";\r\nimport Caroussel from \"components/caroussel/Caroussel.js\";\r\nimport DestinationCard from \"components/destination/DestinationCard.js\";\r\nimport guadeloupe from \"assets/guadeloupe.jpg\";\r\nimport thailande from \"assets/thailande.jpg\";\r\nimport ile_maurice from \"assets/ile_maurice.jpg\";\r\nimport martinique from \"assets/martinique.jpg\";\r\nimport sumatra from \"assets/sumatra.jpg\";\r\nimport polynesie from \"assets/polynesie.jpg\";\r\nimport indonesie from \"assets/indonesie_bali.jpg\";\r\nimport afrique from \"assets/afrique_safari.jpg\";\r\nimport mexique from \"assets/mexique.jpg\";\r\nimport caimens from \"assets/ile_caimens.webp\";\r\n\r\n// Initialise Chance.js\r\nconst chance = new Chance();\r\n\r\n// Tableau des noms de destinations possibles\r\nconst destinationNames = [\"Guadeloupe\", \"Martinique\", \"Polynesie\", \"Sumatra\"];\r\n\r\n// Générer les données aléatoires pour chaque destination\r\nconst destinations = destinationNames.map((name) => ({\r\n  image: chance.pickone([\r\n    thailande,\r\n    sumatra,\r\n    afrique,\r\n    guadeloupe,\r\n    caimens,\r\n    martinique,\r\n    mexique,\r\n    ile_maurice,\r\n    indonesie,\r\n    polynesie,\r\n  ]), // Choix aléatoire d'une image parmi les images disponibles\r\n  title: name,\r\n  description: chance.sentence({ words: 10 }), // Générer une phrase aléatoire avec 10 mots\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const images = [\r\n    thailande,\r\n    sumatra,\r\n    afrique,\r\n    guadeloupe,\r\n    caimens,\r\n    martinique,\r\n    mexique,\r\n    ile_maurice,\r\n    indonesie,\r\n    polynesie,\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <section className=\"homePage\">\r\n        <h1 className=\"homePage--title\">Choisissez une destination</h1>\r\n        <Caroussel images={images} />\r\n      </section>\r\n      <h1 className=\"title\">Destinations populaires</h1>\r\n      <section className=\"destination\" style={{ overflow: \"auto\" }}>\r\n        {destinations.map((destination, index) => (\r\n          <DestinationCard key={index} destination={destination} />\r\n        ))}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n"],"names":["_ref","images","_useState","useState","_useState2","_slicedToArray","currentImageIndex","setCurrentImageIndex","_useState3","_useState4","enlargedImageIndex","setEnlargedImageIndex","_jsxs","className","children","_jsx","onClick","index","length","FaArrowLeft","map","image","src","alt","openImage","concat","FaArrowRight","chance","Chance","destination","randomPhrase","sentence","words","title","description","destinations","name","pickone","thailande","sumatra","afrique","guadeloupe","caimens","martinique","mexique","ile_maurice","indonesie","polynesie","_Fragment","Caroussel","style","overflow","DestinationCard"],"sourceRoot":""}