{"version":3,"file":"static/js/574.14266e5a.chunk.js","mappings":"0MAIMA,EAAkBC,EAAAA,GAAW,CACjCC,SAAUD,EAAAA,KAAaE,SAAS,8BAChCC,SAAUH,EAAAA,KAAaI,IAAI,EAAG,2DAAwDF,SAAS,uBAC/FG,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBH,SAAS,kBAGxDI,EAAe,SAACC,EAAMC,GAAyB,IAArBC,EAAaD,EAAbC,cAC9BC,QAAQC,IAAIJ,GACZE,GAAc,EAChB,EAkCA,EAhCkB,WAChB,OAEEG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,UAAW,GACXZ,SAAU,GACVE,MAAO,IAETN,gBAAiBA,EACjBiB,SAAUV,EAAaW,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAF,SAAA,EACHL,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,YAAWH,SAAC,yBAC3BL,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,OAAOC,GAAG,YAAYC,KAAK,eACvCZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,YAAYE,UAAU,SAGzCd,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,QAAOH,SAAC,aACvBL,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,WACpCZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,SAErCd,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,WAAUH,SAAC,oBAC1BL,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,WAAWC,GAAG,WAAWC,KAAK,cAC1CZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,SAExCd,EAAAA,EAAAA,KAAA,UAAQe,UAAU,QAAQL,KAAK,SAAQL,SAAC,kBAIhD,EChCA,EATa,WACX,OACEC,EAAAA,EAAAA,MAAAU,EAAAA,SAAA,CAAAX,SAAA,EACAL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,8CACFL,EAAAA,EAAAA,KAACiB,EAAS,MAGhB,C","sources":["components/form/LoginForm.js","pages/auth/Login.jsx"],"sourcesContent":["\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validatedSchema = Yup.object({\r\n  userName: Yup.string().required('nom  d\\' utilisateur requis'),\r\n  password: Yup.string().min(6, \"Le mot de passe doit comporter au moins 6 caractÃ¨res\").required(\"Mot de passe requis\"),\r\n  email: Yup.string().email(\"Format email invalide\").required(\"Email requis\"),\r\n});\r\n\r\nconst handleSubmit = (values, { setSubmitting }) => {\r\n  console.log(values);\r\n  setSubmitting(false);\r\n};\r\n\r\nconst LoginForm = () => {\r\n  return (\r\n    \r\n    <Formik\r\n      initialValues={{\r\n        usertName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n      }}\r\n      validatedSchema={validatedSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form>\r\n        <label htmlFor=\"firstName\">Nom d'utilisateur :</label>\r\n        <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\r\n        <ErrorMessage name=\"firstName\" component=\"div\" />\r\n\r\n\r\n        <label htmlFor=\"email\">Email :</label>\r\n        <Field type=\"email\" id=\"email\" name=\"email\" />\r\n        <ErrorMessage name=\"email\" component=\"div\" />\r\n\r\n        <label htmlFor=\"password\">Mot de passe :</label>\r\n        <Field type=\"password\" id=\"password\" name=\"password\" />\r\n        <ErrorMessage name=\"password\" component=\"div\" />\r\n\r\n        <button className=\"login\" type=\"submit\">Soumettre</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","\r\nimport React from \"react\";\r\nimport LoginForm from \"components/form/LoginForm.js\";\r\n\r\nconst Login= () => {\r\n  return (\r\n    <>\r\n    <h2>Connectez-vous pour visiter notre site !</h2>\r\n      <LoginForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["validatedSchema","Yup","userName","required","password","min","email","handleSubmit","values","_ref","setSubmitting","console","log","_jsx","Formik","initialValues","usertName","onSubmit","children","_jsxs","Form","htmlFor","Field","type","id","name","ErrorMessage","component","className","_Fragment","LoginForm"],"sourceRoot":""}