{"version":3,"file":"static/js/681.b9892e98.chunk.js","mappings":"qNAKMA,EAAkBC,EAAAA,GAAW,CACjCC,SAAUD,EAAAA,KAAaE,SAAS,8BAChCC,SAAUH,EAAAA,KAAaI,IAAI,EAAG,2DAAwDF,SAAS,uBAC/FG,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBH,SAAS,kBAGxDI,EAAe,SAACC,EAAMC,GAAyB,IAArBC,EAAaD,EAAbC,cAC9BC,QAAQC,IAAIJ,GACZE,GAAc,EAChB,EAkCA,EAhCkB,WAChB,OAEEG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbb,SAAU,GACVE,SAAU,GACVE,MAAO,IAETN,gBAAiBA,EACjBgB,SAAUT,EAAaU,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,YAAWH,SAAA,EACzBJ,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,YAAWJ,SAAC,yBAC3BJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,OAAOC,GAAG,YAAYC,KAAK,eACvCZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,YAAYE,UAAU,SAGzCd,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,QAAOJ,SAAC,aACvBJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,WACpCZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAU,SAErCd,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,WAAUJ,SAAC,oBAC1BJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,WAAWC,GAAG,WAAWC,KAAK,cAC1CZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,SACxCd,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,GAAG,yBAAyBT,UAAU,SAAQH,SAAC,6BACxDJ,EAAAA,EAAAA,KAAA,UAAQO,UAAU,QAAQG,KAAK,SAAQN,SAAC,kBAIhD,ECjCA,EATiB,WACf,OACEC,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAb,SAAA,EACAJ,EAAAA,EAAAA,KAAA,MAAIO,UAAU,YAAWH,SAAC,sBACxBJ,EAAAA,EAAAA,KAACkB,EAAS,MAGhB,C","sources":["components/form/LoginForm.js","pages/auth/LoginPage.jsx"],"sourcesContent":["\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst validatedSchema = Yup.object({\r\n  userName: Yup.string().required('nom  d\\' utilisateur requis'),\r\n  password: Yup.string().min(6, \"Le mot de passe doit comporter au moins 6 caractères\").required(\"Mot de passe requis\"),\r\n  email: Yup.string().email(\"Format email invalide\").required(\"Email requis\"),\r\n});\r\n\r\nconst handleSubmit = (values, { setSubmitting }) => {\r\n  console.log(values);\r\n  setSubmitting(false);\r\n};\r\n\r\nconst LoginForm = () => {\r\n  return (\r\n    \r\n    <Formik\r\n      initialValues={{\r\n        userName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n      }}\r\n      validatedSchema={validatedSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form className=\"loginForm\">\r\n        <label htmlFor=\"firstName\">Nom d'utilisateur :</label>\r\n        <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\r\n        <ErrorMessage name=\"firstName\" component=\"div\" />\r\n\r\n\r\n        <label htmlFor=\"email\">Email :</label>\r\n        <Field type=\"email\" id=\"email\" name=\"email\" />\r\n        <ErrorMessage name=\"email\" component=\"div\" />\r\n\r\n        <label htmlFor=\"password\">Mot de passe :</label>\r\n        <Field type=\"password\" id=\"password\" name=\"password\" />\r\n        <ErrorMessage name=\"password\" component=\"div\" />\r\n        <NavLink to=\"/forgottenPasswordPage\" className=\"editMP\">Mot de passe oublié </NavLink>\r\n        <button className=\"login\" type=\"submit\">Soumettre</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","\r\nimport React from \"react\";\r\nimport LoginForm from \"components/form/LoginForm.js\";\r\n\r\nconst LoginPage= () => {\r\n  return (\r\n    <>\r\n    <h2 className=\"loginPage\">Connectez-vous !</h2>\r\n      <LoginForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["validatedSchema","Yup","userName","required","password","min","email","handleSubmit","values","_ref","setSubmitting","console","log","_jsx","Formik","initialValues","onSubmit","children","_jsxs","Form","className","htmlFor","Field","type","id","name","ErrorMessage","component","NavLink","to","_Fragment","LoginForm"],"sourceRoot":""}