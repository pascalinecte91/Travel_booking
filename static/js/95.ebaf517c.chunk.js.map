{"version":3,"file":"static/js/95.ebaf517c.chunk.js","mappings":"4MAIMA,EAAkBC,EAAAA,GAAY,CACpCC,KAAMD,EAAAA,KAAaE,SAAS,cAC5BC,MAAOH,EAAAA,KAAaE,SAAS,gBAC7BE,QAASJ,EAAAA,KAAaE,SAAS,kBAC/BG,aAAcL,EAAAA,OAGRM,EAAe,SAACC,EAAMC,GAAwB,IAArBC,EAAaD,EAAbC,cAC3BC,QAAQC,IAAIJ,GACZE,GAAc,EAClB,EAyCA,EAvCoB,WAClB,OAECG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACPC,cAAe,CACdb,KAAM,GACNE,MAAO,GACPC,QAAS,GACTC,cAAc,GAEfN,gBAAiBA,EACjBgB,SAAUT,EAAaU,UAG1BC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,cAAaH,SAAA,EACrBJ,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,OAAMJ,SAAC,WACtBJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,OAAOC,GAAG,OAAOtB,KAAK,UAClCW,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACvB,KAAK,OAAOwB,UAAU,SAEpCb,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,QAAOJ,SAAC,aACvBJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQtB,KAAK,WACpCW,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACvB,KAAK,QAAQwB,UAAU,SAErCb,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,UAASJ,SAAC,eACzBJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACK,GAAG,WAAWH,GAAG,UAAUtB,KAAK,aACvCW,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACvB,KAAK,UAAUwB,UAAU,SAEvCR,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,WAAWrB,KAAK,iBAAiB,yBAI/CW,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAAQN,SAAC,gBAK9B,E,mBCXA,G,QAtCmB,WAmCjB,OAlCEW,EAAAA,EAAAA,YAAU,WAEN,IAYMC,EAAMC,IAAAA,IAAM,OAAOC,QAZA,CAAC,QAAS,QAYgB,IAcnD,OAXAD,IAAAA,UAAY,sDAAsDE,MAAMH,GAZlD,CACpB,CAAE3B,KAAM,kBAAgB+B,YAAa,CAAC,QAAS,QAASC,QAAS,yCACjE,CAAEhC,KAAM,kBAAmB+B,YAAa,CAAC,QAAS,QAASC,QAAS,yCACpE,CAAEhC,KAAM,iBAAkB+B,YAAa,CAAC,QAAS,QAASC,QAAS,kCACnE,CAAEhC,KAAM,mBAAoB+B,YAAa,CAAC,QAAS,QAASC,QAAS,oDAWzDC,SAAQ,SAACC,GACrBN,IAAAA,OAASM,EAAOH,aACbD,MAAMH,GACNQ,UAAU,MAADC,OAAOF,EAAOlC,KAAI,YAAAoC,OAAWF,EAAOF,UAC7CK,WACL,IAGO,WACLV,EAAIW,QACN,CACF,GAAG,KAGA3B,EAAAA,EAAAA,KAAA,WAASO,UAAU,YAAYI,GAAG,OAC3C,GCrBA,EAdwB,WACtB,OACEX,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAxB,UACAC,EAAAA,EAAAA,MAAA,WAASE,UAAU,UAASH,SAAA,EAE5BJ,EAAAA,EAAAA,KAAC6B,EAAW,KACf7B,EAAAA,EAAAA,KAAC8B,EAAU,QAMZ,C","sources":["components/form/ContactForm.js","components/map/contactMap.js","pages/form/ContactFormPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nconst validatedSchema = Yup.object ({\r\nname: Yup.string().required('nom requis'),\r\nemail: Yup.string().required('email requis'),\r\nmessage: Yup.string().required('message requis'),\r\nisRegistered: Yup.boolean(),\r\n});\r\n\r\nconst handleSubmit = (values, {setSubmitting }) => {\r\n    console.log(values);\r\n    setSubmitting(false);\r\n};\r\n\r\nconst ContactForm = () => {\r\n  return (\r\n\r\n   <Formik\r\n   initialValues={{\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    isRegistered: false,\r\n   }}\r\n   validatedSchema={validatedSchema}\r\n   onSubmit={handleSubmit}\r\n   >\r\n\r\n<Form className='formContact'>\r\n        <label htmlFor=\"name\">Nom :</label>\r\n        <Field type=\"text\" id=\"name\" name=\"name\" />\r\n        <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n        <label htmlFor=\"email\">Email :</label>\r\n        <Field type=\"email\" id=\"email\" name=\"email\" />\r\n        <ErrorMessage name=\"email\" component=\"div\" />\r\n\r\n        <label htmlFor=\"message\">Message :</label>\r\n        <Field as=\"textarea\" id=\"message\" name=\"message\" />\r\n        <ErrorMessage name=\"message\" component=\"div\" />\r\n\r\n        <label>\r\n          <Field type=\"checkbox\" name=\"isRegistered\" />\r\n          Déjà inscrit\r\n        </label>\r\n\r\n        <button type=\"submit\">Envoyer</button>\r\n      </Form>\r\n\r\n   </Formik>\r\n  )\r\n}\r\n\r\nexport default ContactForm","import React, { useEffect } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst ContactMap = () => {\r\n    useEffect(() => {\r\n        // Coordonnées de Paris\r\n        const parisCoordinates = [48.8566, 2.3522];\r\n    \r\n        // Coordonnées de succursales fictives de l'agence de travel booking\r\n        const branchOffices = [\r\n          { name: 'Siège social', coordinates: [48.8584, 2.2944], address: '1, Rue de la Tour Eiffel, 75007 Paris' },\r\n          { name: 'Succursale Nord', coordinates: [49.0097, 2.5479], address: '123, Avenue du Nord, 95100 Val d\\'Oise' },\r\n          { name: 'Succursale Sud', coordinates: [48.6325, 2.3948], address: '456, Rue du Sud, 91000 Essonne' },\r\n          { name: 'Succursale Ouest', coordinates: [48.8966, 2.1804], address: '789, Boulevard de l\\'Ouest, 92000 Hauts-de-Seine' },\r\n          // Ajoute autant de succursales que nécessaire\r\n        ];\r\n    \r\n        // Crée une carte Leaflet et l'ajoute à l'élément avec l'id \"map\"\r\n        const map = L.map('map').setView(parisCoordinates, 10);\r\n    \r\n        // Ajoute une couche de tuiles OpenStreetMap à la carte\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n    \r\n        // Ajoute des marqueurs pour chaque succursale avec le nom et l'adresse dans le popup\r\n        branchOffices.forEach((branch) => {\r\n          L.marker(branch.coordinates)\r\n            .addTo(map)\r\n            .bindPopup(`<b>${branch.name}</b><br>${branch.address}`)\r\n            .openPopup();\r\n        });\r\n    \r\n        // Retourne une fonction de nettoyage qui détruira la carte\r\n        return () => {\r\n          map.remove();\r\n        };\r\n      }, []);\r\n    \r\n\r\n  return <section className='mapAdress' id='map'></section>;\r\n};\r\n\r\nexport default ContactMap;\r\n","import React from 'react'\r\nimport ContactForm from 'components/form/ContactForm.js'\r\nimport ContactMap from 'components/map/contactMap.js'\r\n\r\n\r\nconst ContactFormPage = () => {\r\n  return (\r\n    <>\r\n    <section className='contact'>\r\n\r\n    <ContactForm />\r\n <ContactMap />\r\n   \r\n\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactFormPage"],"names":["validatedSchema","Yup","name","required","email","message","isRegistered","handleSubmit","values","_ref","setSubmitting","console","log","_jsx","Formik","initialValues","onSubmit","children","_jsxs","Form","className","htmlFor","Field","type","id","ErrorMessage","component","as","useEffect","map","L","setView","addTo","coordinates","address","forEach","branch","bindPopup","concat","openPopup","remove","_Fragment","ContactForm","ContactMap"],"sourceRoot":""}